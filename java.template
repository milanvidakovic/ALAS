{% set defined_variables_pairs = [] %}
{% set all_variables_pairs = [] %}
{% set func_info = [] %}


{# [['sum', '2', 'int', 'int'], ['example', '0'], ...] #}
{% set func_info = agent|func_information %}
	
{% if agent.package != None %}
package {{agent.package.pack|join('.')}};

{% endif %}
{{agent|imports}}

{% if agent.state == 'stateful' %}
@Stateful
{% else %}@Stateless
{% endif %}
@Remote(Agent.class)
{% if agent.domain != None %}
@Domain(name = "{{agent.domain.name}}")
{% endif %}
public class {{agent.name}} extends XjafAgent {
	{{agent|logger}}

{% for feature in agent.features %}
	{% if feature.__class__.__name__ == 'AgentStates' %}
		{% for state in feature.states %}
			{% if defined_variables_pairs.append(state|defined_variables_list) %}{% endif %}
			{% if all_variables_pairs.append(state|all_variables_list) %}{% endif %}
			{{state|global_variable(func_info)}}
		{% endfor %}
	{% elif feature.__class__.__name__ == 'AgentState' %}
		{% if defined_variables_pairs.append(feature.state|defined_variables_list) %}{% endif %}
		{% if all_variables_pairs.append(feature.state|all_variables_list) %}{% endif %}
		{{feature.state|global_variable(func_info)}}
	{% elif feature.__class__.__name__ == 'Variable' %}
		{% if defined_variables_pairs.append(feature|defined_variables_list) %}{% endif %}
		{% if all_variables_pairs.append(feature|all_variables_list) %}{% endif %}
		{{feature|global_variable(func_info)}}
	{% elif feature.__class__.__name__ == 'Assignment' %}
		{% if defined_variables_pairs.append(feature|defined_global_var(all_variables_pairs)) %}{% endif %}
		{{feature|assignment}}
	{% endif %}
{% endfor %}

@Override
protected void onInit(AgentInitArgs args){
{% for feature in agent.features %}
	{% if feature.__class__.__name__ == 'Init' %}
		{{feature|body(defined_variables_pairs|one_dimensional_list(defined_variables_pairs), 
			all_variables_pairs|one_dimensional_list(all_variables_pairs), func_info)}}
	{% endif %}
{% endfor %}
}

@Override
protected void onMessage(ACLMessage msg) {
	{{agent|onMessage_conditions(defined_variables_pairs|one_dimensional_list(defined_variables_pairs), 
				all_variables_pairs|one_dimensional_list(all_variables_pairs), func_info)}}
}

{% for feature in agent.features %}
	{% if feature.__class__.__name__ == 'Function' %}
		{{feature.function.type}} {{feature.function.func.name}}({{feature.function|func_params}}){
		{{feature|body(feature.function|func_params_pairs(defined_variables_pairs), 
			feature.function|func_params_pairs(all_variables_pairs), func_info)}}
		}
	{% endif %}	
{% endfor %}

@Override
protected void doTasks(AgentInitArgs args) {
{% for feature in agent.features %}
	{% if feature.__class__.__name__ == 'DnarsQuestion' %} 
		List<Term> {{feature.answer}} = {{feature|question_to_str}}
	{% elif feature.__class__.__name__ == 'DnarsInference' %} 
		List<Statement> {{feature.answer}} = {{feature|inference_to_str}}
	{% endif %}
{% endfor %}
}

{% for feature in agent.features %}
	{% if feature.__class__.__name__ == 'DnarsBeliefs' %}
		@Beliefs
		public String[] {{feature|beliefs_to_str}}
	{% elif feature.__class__.__name__ == 'DnarsAddedUpdated' %}
		{{feature|belief_Added_Updated}}{ 
		{{feature|body(defined_variables_pairs|one_dimensional_list(defined_variables_pairs), 
			all_variables_pairs|one_dimensional_list(all_variables_pairs), func_info)}}
	}
	{% endif %}
{% endfor %}


	/*
	public static void main(String[] args) {
		SiebogClient.connect("localhost");
		AgentBuilder.module("dnars-web").ejb({{agent.name}}.class).randomName().start();
	} */
}